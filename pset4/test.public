#!/usr/bin/python

import tester
import sys
import os
import time
import glob

baseDir = '/c/cs223/Hwk4'

if not os.path.exists(baseDir):
    baseDir = '.'

inputDir = os.path.join(baseDir, 'testFiles')

t = tester.Tester(dueDate = time.mktime(time.strptime('2021-03-11 17:00', '%Y-%m-%d %H:%M')))

# we will catch errors on this later
try:
    t.copy('reverseLetters.c')
except:
    pass

# 10 pts if program compiles with all flags
t.test(10, "gcc -std=c99 -Wall -pedantic -o reverseLetters reverseLetters.c -lm", tester.Match(b''), 20)

# 10 pts if program compiles at all
t.test(10, "gcc -std=c99 -o reverseLetters reverseLetters.c -lm || echo compile failed", lambda s: s.find(b'compile failed') < 0, 20)


# sample inputs and outputs
# 5 points for each test
inputs = glob.glob(os.path.join(inputDir, '*.in'))
inputs.sort()
for input in inputs:
    output = input.replace('.in', '.out')
    inputBase = os.path.basename(input)
    t.copy(input)
    t.test(5, 'LC_ALL=C ./reverseLetters < {}'.format(inputBase), 
           tester.Match(open(output, "rb").read()))

# valgrind
for i in ("sample", "empty", "moby", "noLetters"):
    t.log("# valgrind test on {}".format(i))
    t.test(5, "exec valgrind -q --partial-loads-ok=yes --leak-check=yes ./reverseLetters < {}.in > /dev/null".format(i),
        tester.Match(b''),
        30)

print(t.report())
